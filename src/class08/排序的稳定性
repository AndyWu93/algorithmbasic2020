排序的稳定性
选择排序：
选择一个最小值放到0位置，0位置的数与后面的最小值交换了，而0位置的数可能存在多个一样的，一样的之间顺序打乱了，所以不稳定
冒泡排序：
相邻两个数的比较，如果相等不交换，保留了相对次序，所以是稳定的
插入排序
发现自己小就往前换，如果遇到相等的不要往前了，所以是稳定的
归并：
merge时，相等的时候先拷贝左边的，那么左边的数不可能跑到右边去，所以稳定
快排：
partition过程，选了一个标准，小于标准的放在左边，如何放：将该数与小于区域的数交换，交换后相对位置发生改变，所以不稳定
堆排序：
调整大根堆，相等的数相对顺序会发生变化，所以不稳定


O(N*logN)排序pk
如果只追求速度，快排的常数最优
如果追去稳定性，归并
如果追去省空间，堆排序


常见的坑
在整型数组中，请把奇数放在数组左边，偶数放在数组右边，要求所有奇数之间原始的相对次序不变，所有偶数之间原始相对次序不变。
时间复杂度做到O(N)，额外空间复杂度要求O(1)：
本题解题类似于partition，但是partition是不稳定的，所以上面这个题理论上无法达到。但是有个01stablesort相关的论文可以做到，但是非常复杂

arrays.sort()排序逻辑
如果是基础类型，快排，因为不需要稳定性
如果是引用类型，归并，稳定

工程中排序可以综合使用：
快排：调度优秀，常数项高
选择排序：常数项优秀，复杂度高
所以可以整体用快排，但当一个L..R的范围小于60时，不要在切割了，直接调用选择排序

