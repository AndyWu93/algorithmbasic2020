如何找到某个问题的动态规划方式？
1）设计暴力递归：重要原则+4种常见尝试模型！重点！
2）分析有没有重复解：套路解决
3）用记忆化搜索 -> 用严格表结构实现动态规划：套路解决
4）看看能否继续优化：套路解决

面试中设计暴力递归过程的原则（一个原则）
1）每一个可变参数的类型，一定不要比int类型更加复杂
2）原则1）可以违反，让类型突破到一维线性结构，那必须是单一可变参数（比如class19.Code03_StickersToSpellWord）
3）如果发现原则1）被违反，但不违反原则2），只需要做到记忆化搜索即可（面试、笔试）
4）可变参数的个数，能少则少

知道了面试中设计暴力递归过程的原则，然后呢？
一定要逼自己找到不违反原则情况下的暴力尝试！
如果你找到的暴力尝试，不符合原则，马上舍弃！找新的！
如果某个题目突破了设计原则，一定极难极难，面试中出现概率低于5%！

常见的4种尝试模型（4个尝试模型）
1）从左往右的尝试模型
2）范围上的尝试模型
3）多样本位置全对应的尝试模型
4）寻找业务限制的尝试模型

动态规划的进一步优化
1）空间压缩
2）状态化简（指尽量用不大于int作为可变参数）
3）四边形不等式
4）其他优化技巧


